# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI

on:
  push:
    branches: [ "main", "deploy" ]
  pull_request:
    branches: [ "main", "deploy" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Create application.yml
      run: |
        mkdir -p ./src/main/resources
        cd ./src/main/resources
        echo "${{ secrets.APPLICATION }}" base64 -d > application.yml
        echo "${{ secrets.JWT_APPLICATION }}" base64 -d > application-jwt.yml
        echo "${{ secrets.TEST_APPLICATION }}" base64 -d > application-test.yml

    - name: Install PostgreSQL client
      run: sudo apt-get install -y postgresql-client

    - name: Test Database Connection
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        # DNS 조회 테스트
        RESOLVED_IP=$(dig +short ${DB_HOST} @ns1.gabia.co.kr)
        echo "Resolved IP for ${DB_HOST}: ${RESOLVED_IP}"
        
        # 연결 테스트
        PGPASSWORD=$DB_PASSWORD psql -h ${RESOLVED_IP} -p ${DB_PORT} -U ${DB_USER} -d ${DB_NAME} -c "SELECT 1"

    - name: Build with Gradle Wrapper
      run: ./gradlew build --parallel --daemon
