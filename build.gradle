plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
    id 'org.ec4j.editorconfig' version '0.0.3'
    id 'checkstyle'
    id 'org.flywaydb.flyway' version '9.21.1'
}

group = 'com.aloc'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/config/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "${rootDir}/config/naver-checkstyle-suppressions.xml"]
    toolVersion = "8.42"
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'commons-codec:commons-codec:1.5'
    implementation 'com.auth0:java-jwt:4.4.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-core'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.jsoup:jsoup:1.17.2'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    //swagger
//    implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'org.flywaydb:flyway-core' //    implementation "org.flywaydb:flyway-database-postgresql"
    implementation 'org.flywaydb:flyway-database-postgresql'
}

tasks.named('test') {
	useJUnitPlatform()
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

flyway {
    driver = 'org.postgresql.Driver'
    url = 'jdbc:postgresql://localhost:5432/aloc'
    user = 'postgres'
    password = 'password'
    schemas = ['public']
    table = 'schema_history'
    baselineVersion = 1
    locations = ['classpath:db/migration']
}
